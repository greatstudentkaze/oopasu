@using StudyAssignmentManager.Domain
@using System.Net.Http.Json
@using StudyAssignmentManager.Client.Services

@inject HttpClient client
@inject NavigationManager NavigationManager
@inject EditorJSService editorJSService

@page "/educational-materials/create"

<h1>Создание учебного материала</h1>
<p>@LastSubmitResult</p>
<p>@responseMessage</p>
<EditForm Model="@educationalMaterial" OnSubmit="@HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    
    <div class="form-group">
        <label for="title">Название</label>
        <InputText @bind-Value="educationalMaterial.Title" class="form-control" id="title"/>
    </div>
    
    <div class="form-group">
        <label for="description">Описание</label>
        <InputText @bind-Value="educationalMaterial.Description" class="form-control" id="description"/>
    </div>
    
    <div class="form-group">
        <label for="assignment-data-editorjs">Содержимое</label>
        <div class="form-control" style="height: auto;" id="assignment-data-editorjs" @ref="editorjsElement"></div>
    </div>
    <button class="btn btn-success" type="submit">Создать</button>
</EditForm>

@code {
    private EducationalMaterial educationalMaterial = new ();
    string LastSubmitResult;
    string responseMessage;
    
    private ElementReference editorjsElement;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await editorJSService.Init(editorjsElement);
        }
    }

    private async void HandleSubmit(EditContext editContext)
    {
        educationalMaterial.AuthorId = UserService.userData.Id;
        educationalMaterial.Content = await editorJSService.GetDataAsync();

        if (!editContext.Validate())
        {
            return;
        }

        CreateEducationalMaterial();
    }

    private async void CreateEducationalMaterial()
    {
        var response = await client.PostAsJsonAsync("educational-materials", educationalMaterial);
        if (!response.IsSuccessStatusCode)
        {
            responseMessage = "Возникла ошибка. Обновите страницу и попробуйте еще раз";
            return;
        }
        
        var createdEducationalMaterial = await response.Content.ReadFromJsonAsync<EducationalMaterial>();
        NavigationManager.NavigateTo($"/educational-materials?successful-creation={createdEducationalMaterial?.Id}");
    }
}
